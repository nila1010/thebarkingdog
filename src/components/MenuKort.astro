---
/* Vi fetcher data fra SupaBase ved at fetche den url som databasen ligger på samt hvilken tabel
der skal hentes data fra*/
const response = await fetch('https://vdmmsfhwyenonuczxxlg.supabase.co/rest/v1/menukort', {
	method: 'GET',
	headers: {
		/*For at få adgang til vores data skal vi have en apikey*/
		apikey:
			'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZkbW1zZmh3eWVub251Y3p4eGxnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDIwMjU3OTQsImV4cCI6MjAxNzYwMTc5NH0.o9ue87z_nRxD0pgEX3Dfl3tS4iG8BY_1Sao3mkZcugs'
	}
})
/*Når vi har hentet data fra databasen laver vi en konstant som tage den data
som ligger i json filen som vi kan bruge til at target det indhold vi skal bruge*/
const data = await response.json()

import MenuIndhold from './MenuIndhold.astro'
---

<section class="slider">
	<article class="slide">
		<div>
			<h1 class="colorh1">Coc</h1>
			<h1>ktai</h1>
			<h1>ls</h1>
		</div>
		{
			/*Vi bruger map funktion for at få de enkelte drinks trukket ud af det array de kommer i
		fra json filen*/
			data.map((oneDrink) => {
				/*Vi laver en if statement fordi vi kun vil have nogle
				specifikke drinks*/
				if (oneDrink.sidenr == 1) {
					/*Vi returner komponenten MenuIndhold og sender det valgte data til komponenten så 
					det kan indsættes. Via map funktionen bliver der retuneret det
					antal drinks som matcher vores if statement*/
					return <MenuIndhold data={oneDrink} />
				}
			})
		}
		<img id="next" src="/logo/pil.svg" alt="Næste side" />
	</article>

	<article class="slide">
		<div>
			<h1 class="colorh1">Coc</h1>
			<h1>ktai</h1>
			<h1>ls</h1>
		</div>
		{
			/*For at vi kan få vist forskellige drinks
			på forskellige sider af vores menukort indsætter vi 
			endnu en map funktion med de drinks som skal være på
			næste side og tilpasser vores if statement*/
			data.map((oneDrink) => {
				if (oneDrink.sidenr == 2) {
					return <MenuIndhold data={oneDrink} />
				}
			})
		}
		<img id="next" src="/logo/pil.svg" alt="Næste side" />
		<img id="prev" src="/logo/pil.svg" alt="Forrige side" />
	</article>

	<style>
		section {
			grid-column: 1;
			grid-row: 1;
			margin: 40rem 31rem 4rem 2rem;
			max-width: 550px;
			display: flex;
			overflow: hidden;
			scroll-behavior: smooth;
		}
		article {
			position: relative;
			display: flex;
			flex-direction: column;
			gap: 50px;
			background-color: #fff5d7;
			padding: 0 20px 80px 20px;
			border-radius: 30px;
			min-width: 100%;
		}

		article:nth-child(even) div:first-child {
			text-align: right;
		}

		h1 {
			color: var(--background-color-primary);
			line-height: 80px;
		}
		.colorh1 {
			margin-top: 40px;
			color: var(--text-color-alternativ);
		}

		#next {
			position: absolute;
			width: 8%;
			bottom: 15px;
			right: 30px;
		}

		#prev {
			position: absolute;
			width: 8%;
			bottom: 15px;
			right: 95px;
			transform: rotate(180deg);
		}

		@media (max-width: 1200px) {
			h1 {
				line-height: 60px;
			}
			.colorh1 {
				margin-top: 30px;
			}
		}

		@media (max-width: 850px) {
			section {
				margin-right: 25rem;
			}
		}

		@media (max-width: 700px) {
			section {
				max-width: 350px;
			}
		}

		@media (max-width: 750px) {
			section {
				grid-row: 2;
				margin: 15px auto 0 auto;
			}
		}

		@media (max-width: 500px) {
			h1 {
				line-height: 40px;
			}
			.colorh1 {
				margin-top: 20px;
			}
		}
	</style>

	<script>
		/*For at få vores slide effekt til at virke på vores menukort
		har vi tilføjet en eventListner til de forskellie knapper
		og lavet en funktion som tjekker width af den container
		som vi gerne vil slide og derefter vælger vi om den skal 
		slide til højre eller venstre*/
		const container = document.querySelector('.slider')

		const slide = document.querySelector('.slide')

		const next = document.querySelector('#next')

		const prev = document.querySelector('#prev')

		next.addEventListener('click', () => {
			const slideWidth = slide.clientWidth
			container.scrollLeft += slideWidth
		})

		prev.addEventListener('click', () => {
			const slideWidth = slide.clientWidth
			container.scrollLeft -= slideWidth
		})
	</script>
</section>
